#!/bin/bash
#
# defines
#
# Matcha 1.0, Created by gradyzhuo, enoch_lee.
# Copyright Â© 2017, Matcha Inc. All rights reserved.
#
declare -f config_env_variables
declare -f validate_parameters

BUILD_DATETIME="$(date +"%Y%m%d-%H%M")"

function validate_env_variables(){

  declare -i result=0

  if [[ "$SOURCE_TYPE" == "git" && "$GIT_APP" == "" ]]; then
    print -c red -s bold '[GIT_APP] is not setting.'
    result=1
  fi

  if [[ "$PROJ_SCHEME" == "" ]]; then
    print -c red -s bold '[PROJ_SCHEME] is not setting. Please setting it by pass -s in the command line.'
    result=1
  fi

  if [[ "$TEAM_NAME" == "" ]]; then
    print -c red -s bold "[TEAM_NAME] is not setting. Please setting it by pass -tn in the command line."
    result=1
  fi

  if [[ $result == 1 ]]; then
    terminate
  fi

}

function config_env_variables(){

  switch_dir_to "$APP_PATH"
  check_type=$(basename *.xcodeproj)
  PROJ_NAME=$(echo "$check_type" | sed 's/\.xcodeproj//g')
  restore_dir

  #====

  if [[ $BUILD_ID == 0 ]]; then
    LOG_FOLDER="$LOG_FOLDER/${BUILD_DATETIME}"
  else
    LOG_FOLDER="$LOG_FOLDER/${PROJ_NAME}_${BUILD_DATETIME}"
  fi

  ARCHIVE_NAME="${PROJ_NAME}"
  EXPORT_SUB_FOLDER="${BUILD_DATETIME}"

  if [[ "$PROJ_SCHEME" == "" ]]; then
    PROJ_SCHEME="$PROJ_NAME"
  fi

}

function configure_signing_identity() {
  #=============================
  pem_content=$(security find-certificate -c "$TEAM_NAME" -p)
  if [[ "$SPECIFICS_SIGNING_IDENTITY" == "" ]]; then
    #https://www.jamf.com/jamf-nation/discussions/18317/ext-attribute-to-list-certificates
    SIGNING_IDENTITY=$(openssl x509 -noout -text <<< "$pem_content" | grep Subject: | sed 's/        Subject: UID=.*, CN=//g' | sed 's/, O=.*//g' | sed 's/, OU=.*//g')
    print -c green "using 'signing identity': $SIGNING_IDENTITY (by certificate)"
  else
    SIGNING_IDENTITY="$SPECIFICS_SIGNING_IDENTITY"
  fi

  if [[ "$SPECIFICS_TEAM_ID" == "" ]]; then
    TEAM_ID=$(openssl x509 -noout -text <<< "$pem_content" | grep Subject: | sed 's/        Subject: UID=//g' | sed 's/,.*//g')
    print -c green "using 'team id': $TEAM_ID (by certificate)"
  else
    TEAM_ID="$SPECIFICS_TEAM_ID"
  fi
}
