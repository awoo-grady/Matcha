#!/bin/bash -l
#
# .prefix
#
# Matcha 1.0, Created by gradyzhuo, enoch_lee.
# Copyright © 2017, Matcha Inc. All rights reserved.
#

declare -x MATCHA_VERSION='1.0'
declare -x INSTALL_LIB_TARGET="$HOME/.matcha"

declare -x MATCHA_BUILDER_BASE
declare -x COMMAND_BASE
declare -x COMMAND
declare -x MODULES_FOLDER

declare -i -x DEBUG_MODE
declare -i -x BUILD_CI

declare -f @exec
declare -f @exists -f
declare -f command_exists
declare -f exists
declare -f welcome
declare -f tips
declare -f @log

function welcome(){
  print ''
  print -c green -s bold '＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃'
  print -c green -s bold  '＃　　　　　　　　　　　　　　　　　　　　　　　　　　　　＃'
  print -c green -s bold  '＃　　　　　　　～～　Ｗｅｌｃｏｍｅ　～～　　　　　　　　＃'
  print -c green -s bold  '＃　　　　　　Ｍａｔｃｈａ　Ｓｃｒｉｐｔｉｎｇ　　　　　　＃'
  print -c green -s bold  '＃　　　　　　　Ｖｅｒｓｉｏｎ　　１．０　　　　　　　　　＃'
  print -c green -s bold  '＃　　　　　　　　　　　　　　　　　　　　　　　　　　　　＃'
  print -c green -s bold  '＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃'
  print ''
}

function tips(){
  print -c "green" "============================"
  print -c "green" -s "bold" "Now you can \`@import module\` module to do something."
  print -c "green" -s "bold" 'Try it!\n```\n    @import Prints\n    print -c "blue" Hello Matcha!\n```'
  prints "-c green -s bold 'And you will see the result: '" "-c blue 'Hello Matcha!'"
  print -c green -s bold "Enjoy it!"
}

function @import() {
  @exec import "$@"
}

function @exec() {

  COMMAND="$1"

  if [[ $(ls "$MATCHA_BUILDER_BASE/command") != *"$COMMAND"*  ]]; then
    print -c 'red' -s 'bold' "Command \`$1\` not found." 1>&2
    return 0
  fi

  if [[ -z $COMMAND ]]; then
    print -c "red" -s bold "-- Command name can't be empty! ----------"
    return 0
  fi

  COMMAND_DIR="$MATCHA_BUILDER_BASE/command/$COMMAND"
  pushd "$COMMAND_DIR" >/dev/null 2>&1
  if [[ -s "$COMMAND_DIR/source" ]]; then

    source  'source' "$@"

  elif [[ -s "$COMMAND_DIR/main" ]]; then
    PREVIOUS_COMMAND_BASE="$COMMAND_BASE"
    COMMAND_BASE="$COMMAND_DIR"

    bash -l main "$@"

    COMMAND_BASE="$PREVIOUS_COMMAND_BASE"
  fi
  popd >/dev/null 2>&1

}

function shell_function_exists() {
    declare -f -F $1 >/dev/null 2>&1
    echo "$?"
}

function shell_command_exists() {
    command -v $1 >/dev/null 2>&1
    echo "$?"
}

# -f : function
# -c : command
function @exists() {
	_type="$1"
	_command="$2"

    if [[ "$_type" == "-f" ]]; then
      shell_function_exists $_command
    fi

    if [[ "$_type" == "-c" ]]; then
    	shell_command_exists $_command
    fi
}

function @log() {
  title="$1"
  DATETIME="$(date +"%y-%m-%d %H:%M:%S")"
  print -c cyan -s bold "[$DATETIME] $title"
}

function @error() {
  title="$1"
  DATETIME="$(date +"%y-%m-%d %H:%M:%S")"
  print -c cyan -s bold "[$DATETIME] $title" 1>&2
}
